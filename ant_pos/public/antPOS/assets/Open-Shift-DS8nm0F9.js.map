{"version":3,"file":"Open-Shift-DS8nm0F9.js","sources":["../../../../AntPos/src/components/Dialog/Open-Shift.vue"],"sourcesContent":["<template>\n    <Dialog v-model=\"dialog1\"  @close=\"closeDialog\">\n      <template #body-title>\n        <h3 style=\"color: #4e60ac !important; font-family: 'futura-pt', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important; font-size: 17px !important;\">Create ANT Opening Shift</h3>\n      </template>\n      <template #body-content>\n        <div class=\"flex flex-col gap-8\" style=\"background-color: #ffffff !important; color: #82868f !important; font-family: 'futura-pt', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important; font-size: 17px !important;\">\n          <FormControl\n            type=\"autocomplete\"\n            :options=\"options.company.map(company => ({ label: company, value: company }))\"\n            size=\"sm\"\n            variant=\"subtle\"\n            placeholder=\"Select Company\"\n            label=\"Company\"\n            v-model=\"autocompleteValue\"\n          />\n\n          <FormControl\n            type=\"autocomplete\"\n            :options=\"getProfileOptions()\"\n            size=\"sm\"\n            variant=\"subtle\"\n            placeholder=\"Select POS Profile\"\n            :disabled=\"!autocompleteValue\"\n            label=\"POS Profile\"\n            v-model=\"autocompleteProfileValue\"\n          />\n\n          <div v-if=\"mode_of_payment.length\">\n            <div class=\"border-2\" style=\"border-color: #4e60ac !important;\">\n              <div class=\"p-2 flex justify-between\" style=\"background-color: #4e60ac !important; color: white !important; font-weight: 600 !important;\">\n                <div class=\"text-center\">Mode Of Payment</div>\n                Opening Amount\n              </div>\n              <div\n                class=\"flex justify-between p-2 border-t-2\"\n                v-for=\"mode in mode_of_payment\"\n                :key=\"mode\"\n              >\n                <div class=\"w-1/2\">{{ mode }}</div>\n                <div class=\"\">\n                  <FormControl\n                    type=\"number\"\n                    size=\"sm\"\n                    variant=\"subtle\"\n                    placeholder=\"Opening Amount\"\n                    :name=\"mode\"\n                    v-model=\"openingAmounts[mode]\" \n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </template>\n      <template #actions>\n        <Button variant=\"solid\" @click=\"confirmShift\" style=\"background-color: #4e60ac !important; border-color: #4e60ac !important; color: white !important; font-family: 'futura-pt', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important; font-size: 17px !important;\">Confirm</Button>\n        <Button class=\"ml-2\" @click=\"closeDialog\" style=\"background-color: #7c8bca !important; border-color: #7c8bca !important; color: white !important; font-family: 'futura-pt', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important; font-size: 17px !important;\">Close</Button>\n      </template>\n    </Dialog>\n</template>\n\n\n<script setup>\n    import { createResource, Button, Dialog, FormControl } from 'frappe-ui';\n    import { inject, ref, watch, reactive  } from 'vue';\n\n    const options = reactive({company: [],profile: {},});\n    const dialog1 = ref(false);\n    const autocompleteValue = ref({});\n    const autocompleteProfileValue = ref({});\n    const mode_of_payment = ref([]);\n    const openingAmounts = reactive({});\n    let base = inject('base');\n\n    const closeDialog = () => {\n        validate_pos.fetch()\n    };\n    const submit = createResource({\n        url: 'ant_pos.ant_pos.api.pos_profile.create_opening',\n        method: 'POST',\n        \n        onSuccess(data) {\n        \n        \n        },\n    });\n    const confirmShift = async () => {\n      const submissionData = {\n          company: autocompleteValue.value.value || null,\n          pos_profile: autocompleteProfileValue.value.value || null,\n          status: 'Open',\n          opening_balance_details: mode_of_payment.value.map((mode) => ({\n          mode_of_payment: mode,\n          opening_amount: openingAmounts[mode] || 0,\n          })),\n      };\n\n      try {\n          await submit.submit({ values: submissionData });\n          closeDialog();\n      } catch (error) {\n          errorMessage.value = 'Failed to submit data. Please try again.';\n          console.error('Submission Error:', error);\n      } finally {\n      }\n    };\n\n\n    const getModeOfPayment = () => {\n      if (getProfileOptions()) {\n          const profiles = options.profile[autocompleteValue.value.value];\n          const profile = profiles.find((p) => p.name === autocompleteProfileValue.value.value);\n          return profile ? profile.modes_of_payment : [];\n      }\n      return [];\n    };\n\n    const getProfileOptions = () => {\n      const profile = options.profile[autocompleteValue.value.value];\n      return profile ? profile.map((item) => item.name) : [];\n    };\n\n    const openDialog = () => {\n      const posprofile = createResource({\n        url: 'ant_pos.ant_pos.api.pos_profile.get_pos_profiles_by_company',\n        method: 'GET',\n        onSuccess(data) {\n          if (data && typeof data === 'object') {\n              options.company = Object.keys(data);\n              options.profile = data;\n          }\n        },\n      });\n      \n      posprofile.fetch();\n      dialog1.value = true;\n    };\n    const validate_pos = createResource({\n      url: 'ant_pos.ant_pos.api.pos_profile.get_openingshift',\n      method: 'GET',\n      auto:true,\n\n      onSuccess(data) {\n        \n        if (data){\n          Object.assign(base, data);         \n          dialog1.value=false;\n        }else{\n          openDialog()\n        }\n      },\n    });\n    watch(autocompleteProfileValue, (newVal, oldVal) => {\n      if (newVal.value !== oldVal.value) {\n        mode_of_payment.value = getModeOfPayment();\n      }\n    });\n\n</script>"],"names":["options","reactive","dialog1","ref","autocompleteValue","autocompleteProfileValue","mode_of_payment","openingAmounts","base","inject","closeDialog","validate_pos","submit","createResource","data","confirmShift","submissionData","mode","error","getModeOfPayment","getProfileOptions","profile","p","item","openDialog","watch","newVal","oldVal","_createBlock","_unref","Dialog","$event","_cache","_createElementVNode","_hoisted_1","_createVNode","FormControl","company","_createElementBlock","_hoisted_2","_hoisted_3","_Fragment","_renderList","_hoisted_4","_toDisplayString","_hoisted_5","Button"],"mappings":"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"}